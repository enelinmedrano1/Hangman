//Rallabandi, Sai Tejaswini
//Medrano, Enelin

#include <stdio.h>
#include <string.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>  // for call to rand() and srand()
#include <time.h>   // for call to time() in srand(time(NULL))

#define DEBUG 1  // 1-development mode, prints more info; 0 - user mode, prints less
#define MAX_WRONG 6

int play_session(int level);
void read_random_word(char fname[]);
void game_time_easy(int errorNum);

void drawHead();
void drawTopBody();
void drawMidBody();
void drawBottomBody();
void rightArm();
void leftArm();
void rightLeg();
void leftLeg();

int main(){
    int level, len, wrong_guesses = MAX_WRONG;
    char enter, hidden[50], revealed[50], user_letter, u_letter, used_letters[50], current[50];
    if (DEBUG == 1) {
        srand(1);  // the same sequence of random numbers will be generated for each run
    }
    else {
        srand(time(NULL));  // a different sequence of random numbers will be generated with each run
    }

    printf("Choose difficulty level (exit the game: 0, easy: 1, medium: 2, hard: 3): ");
    scanf("%d", &level );
    while (level!=0){
        play_session(level);
        printf("Choose difficulty level (exit the game: 0, easy: 1, medium: 2, hard: 3): ");
        scanf("%d", &level);
    }
    printf("\nThank you for playing our game! Goodbye!");
}

int play_session(int level){
     switch(level){
        case 0:
            exit(0);
        case 1:
            read_random_word("easy.txt");
            if (level==1)
            game_time_easy(errorNum);
            break;
        case 2:
            read_random_word("medium.txt");
            game_time(level);
            break;
        case 3:
            read_random_word("hard.txt");
            game_time(level);
            break;
        }
    }
void read_random_word(char fname[]){
     int number, index;
     char word[50];
     FILE * fp = fopen(fname, "r+");
     if (fp==NULL){
        printf("Failed to open file %s\n", fname);
        return;
    }
    fscanf(fp, "%d", &number);
    index = rand()%number;
    for(int k = 0; k<=index; k++){
        fscanf(fp, "%s", word);
        }
    printf("rand index = %d\n", index);
    printf("-----hidden word: |%s|\n\n\n\n\n\n\n\n\n", word);
    fclose(fp);
}

void game_time_easy(int errorNum){
     printf("Level = Easy, Error Number: %d\n\n\n", errorNum);

     //printf("|\n|\n|\n|\n|\n|\n");
     // switch(error)
     switch(errorNum)
     {
        case 1:
         {
          printf("------|\n"); break;
         }

        case 2:
         {
     printf("|     |\n"); break;
         }
       case 3:
         {
             drawHead(); break;
         }
       case 4:
         {
              drawHead();  drawTopBody();
              drawMidBody();
              drawBottomBody();
           break;
        }
       case 5:
         {
           drawHead();  drawTopBody();
          drawMidBody();
             break;
         }
        case 6:
         {
           drawHead();  drawTopBody();
          drawMidBody();
           drawBottomBody();
             break;
         }
         case 7:
         {
              drawHead();  drawTopBody();
              leftArm();
     drawBottomBody();
           break;
        }
         case 8:
         {
              drawHead();  drawTopBody();
              rightArm();
              drawBottomBody();
           break;
        }
         case 9:
         {
              drawHead();  drawTopBody();
              rightArm();
              drawBottomBody();
              leftLeg();
           break;
        }
        case 10:
         {
              drawHead();  drawTopBody();
              rightArm();
              drawBottomBody();
              rightLeg();
           break;
        }
     }

     //rightArm();
    // leftArm();
     //rightLeg();
    // leftLeg();
     printf("-----------\n");
}

void drawHead()
{
  printf("|     O\n");
}

void drawTopBody()
{
  printf("|     |\n");
}

void drawMidBody()
{
  printf("|     |\n");
}

void drawBottomBody()
{
  printf("|     |\n");
}

void rightArm()
{
      printf("|    /|\\\n");
}

void leftArm()
{
      printf("|    /|\n");
}

void rightLeg()
{
      printf("|    / \\\n");
}

void leftLeg()
{
      printf("|    /\n");
}

